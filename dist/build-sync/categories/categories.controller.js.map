{"version":3,"sources":["../../../src/build-sync/categories/categories.controller.ts"],"sourcesContent":["import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpException,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n} from '@nestjs/common';\nimport { handlePrismaError, isPrismaError } from 'src/util/prisma';\nimport { CategoriesService } from './categories.service';\nimport type { CreateCategoryDto } from './dto/category.dto';\n\n@Controller('api/build-sync/categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Get()\n  async getAllCategories() {\n    try {\n      const categories = await this.categoriesService.getAllCategories();\n      return {\n        ok: true,\n        status: 200,\n        data: categories,\n      };\n    } catch (error) {\n      if (isPrismaError(error)) {\n        const { message, status } = handlePrismaError(error);\n        throw new HttpException(message, status);\n      }\n      throw new HttpException(\n        '카테고리 조회 중 오류가 발생했습니다.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  @Get(':id')\n  async getCategory(@Param('id', ParseIntPipe) id: number) {\n    try {\n      const category = await this.categoriesService.getCategory(id);\n      if (!category) {\n        throw new HttpException(\n          '카테고리를 찾을 수 없습니다.',\n          HttpStatus.NOT_FOUND,\n        );\n      }\n      return {\n        ok: true,\n        status: 200,\n        data: category,\n      };\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n      if (isPrismaError(error)) {\n        const { message, status } = handlePrismaError(error);\n        throw new HttpException(message, status);\n      }\n      throw new HttpException(\n        '카테고리 조회 중 오류가 발생했습니다.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  @Get('name/:categoryName')\n  async getCategoryByName(@Param('categoryName') categoryName: string) {\n    try {\n      const category =\n        await this.categoriesService.getCategoryByName(categoryName);\n      if (!category) {\n        throw new HttpException(\n          '카테고리를 찾을 수 없습니다.',\n          HttpStatus.NOT_FOUND,\n        );\n      }\n      return {\n        ok: true,\n        status: 200,\n        data: category,\n      };\n    } catch (error) {\n      if (error instanceof HttpException) {\n        throw error;\n      }\n      if (isPrismaError(error)) {\n        const { message, status } = handlePrismaError(error);\n        throw new HttpException(message, status);\n      }\n      throw new HttpException(\n        '카테고리 조회 중 오류가 발생했습니다.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  @Post()\n  async createCategory(@Body() createCategoryDto: CreateCategoryDto) {\n    try {\n      const category =\n        await this.categoriesService.createCategory(createCategoryDto);\n      return {\n        ok: true,\n        status: 201,\n        data: category,\n        message: '카테고리가 성공적으로 생성되었습니다.',\n      };\n    } catch (error) {\n      if (isPrismaError(error)) {\n        const { message, status } = handlePrismaError(error);\n        throw new HttpException(message, status);\n      }\n      throw new HttpException(\n        '카테고리 생성 중 오류가 발생했습니다.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n\n  @Delete(':id')\n  async deleteCategory(@Param('id', ParseIntPipe) id: number) {\n    try {\n      await this.categoriesService.deleteCategory(id);\n      return {\n        ok: true,\n        status: 200,\n        message: '카테고리가 성공적으로 삭제되었습니다.',\n      };\n    } catch (error) {\n      if (isPrismaError(error)) {\n        const { message, status } = handlePrismaError(error);\n        throw new HttpException(message, status);\n      }\n      throw new HttpException(\n        '카테고리 삭제 중 오류가 발생했습니다.',\n        HttpStatus.INTERNAL_SERVER_ERROR,\n      );\n    }\n  }\n}\n"],"names":["CategoriesController","getAllCategories","categories","categoriesService","ok","status","data","error","isPrismaError","message","handlePrismaError","HttpException","HttpStatus","INTERNAL_SERVER_ERROR","getCategory","id","category","NOT_FOUND","getCategoryByName","categoryName","createCategory","createCategoryDto","deleteCategory"],"mappings":";;;;+BAgBaA;;;eAAAA;;;wBANN;wBAC0C;mCACf;;;;;;;;;;;;;;;AAI3B,IAAA,AAAMA,uBAAN,MAAMA;IAGX,MACMC,mBAAmB;QACvB,IAAI;YACF,MAAMC,aAAa,MAAM,IAAI,CAACC,iBAAiB,CAACF,gBAAgB;YAChE,OAAO;gBACLG,IAAI;gBACJC,QAAQ;gBACRC,MAAMJ;YACR;QACF,EAAE,OAAOK,OAAO;YACd,IAAIC,IAAAA,qBAAa,EAACD,QAAQ;gBACxB,MAAM,EAAEE,OAAO,EAAEJ,MAAM,EAAE,GAAGK,IAAAA,yBAAiB,EAACH;gBAC9C,MAAM,IAAII,qBAAa,CAACF,SAASJ;YACnC;YACA,MAAM,IAAIM,qBAAa,CACrB,yBACAC,kBAAU,CAACC,qBAAqB;QAEpC;IACF;IAEA,MACMC,YAAY,AAA2BC,EAAU,EAAE;QACvD,IAAI;YACF,MAAMC,WAAW,MAAM,IAAI,CAACb,iBAAiB,CAACW,WAAW,CAACC;YAC1D,IAAI,CAACC,UAAU;gBACb,MAAM,IAAIL,qBAAa,CACrB,oBACAC,kBAAU,CAACK,SAAS;YAExB;YACA,OAAO;gBACLb,IAAI;gBACJC,QAAQ;gBACRC,MAAMU;YACR;QACF,EAAE,OAAOT,OAAO;YACd,IAAIA,iBAAiBI,qBAAa,EAAE;gBAClC,MAAMJ;YACR;YACA,IAAIC,IAAAA,qBAAa,EAACD,QAAQ;gBACxB,MAAM,EAAEE,OAAO,EAAEJ,MAAM,EAAE,GAAGK,IAAAA,yBAAiB,EAACH;gBAC9C,MAAM,IAAII,qBAAa,CAACF,SAASJ;YACnC;YACA,MAAM,IAAIM,qBAAa,CACrB,yBACAC,kBAAU,CAACC,qBAAqB;QAEpC;IACF;IAEA,MACMK,kBAAkB,AAAuBC,YAAoB,EAAE;QACnE,IAAI;YACF,MAAMH,WACJ,MAAM,IAAI,CAACb,iBAAiB,CAACe,iBAAiB,CAACC;YACjD,IAAI,CAACH,UAAU;gBACb,MAAM,IAAIL,qBAAa,CACrB,oBACAC,kBAAU,CAACK,SAAS;YAExB;YACA,OAAO;gBACLb,IAAI;gBACJC,QAAQ;gBACRC,MAAMU;YACR;QACF,EAAE,OAAOT,OAAO;YACd,IAAIA,iBAAiBI,qBAAa,EAAE;gBAClC,MAAMJ;YACR;YACA,IAAIC,IAAAA,qBAAa,EAACD,QAAQ;gBACxB,MAAM,EAAEE,OAAO,EAAEJ,MAAM,EAAE,GAAGK,IAAAA,yBAAiB,EAACH;gBAC9C,MAAM,IAAII,qBAAa,CAACF,SAASJ;YACnC;YACA,MAAM,IAAIM,qBAAa,CACrB,yBACAC,kBAAU,CAACC,qBAAqB;QAEpC;IACF;IAEA,MACMO,eAAe,AAAQC,iBAAoC,EAAE;QACjE,IAAI;YACF,MAAML,WACJ,MAAM,IAAI,CAACb,iBAAiB,CAACiB,cAAc,CAACC;YAC9C,OAAO;gBACLjB,IAAI;gBACJC,QAAQ;gBACRC,MAAMU;gBACNP,SAAS;YACX;QACF,EAAE,OAAOF,OAAO;YACd,IAAIC,IAAAA,qBAAa,EAACD,QAAQ;gBACxB,MAAM,EAAEE,OAAO,EAAEJ,MAAM,EAAE,GAAGK,IAAAA,yBAAiB,EAACH;gBAC9C,MAAM,IAAII,qBAAa,CAACF,SAASJ;YACnC;YACA,MAAM,IAAIM,qBAAa,CACrB,yBACAC,kBAAU,CAACC,qBAAqB;QAEpC;IACF;IAEA,MACMS,eAAe,AAA2BP,EAAU,EAAE;QAC1D,IAAI;YACF,MAAM,IAAI,CAACZ,iBAAiB,CAACmB,cAAc,CAACP;YAC5C,OAAO;gBACLX,IAAI;gBACJC,QAAQ;gBACRI,SAAS;YACX;QACF,EAAE,OAAOF,OAAO;YACd,IAAIC,IAAAA,qBAAa,EAACD,QAAQ;gBACxB,MAAM,EAAEE,OAAO,EAAEJ,MAAM,EAAE,GAAGK,IAAAA,yBAAiB,EAACH;gBAC9C,MAAM,IAAII,qBAAa,CAACF,SAASJ;YACnC;YACA,MAAM,IAAIM,qBAAa,CACrB,yBACAC,kBAAU,CAACC,qBAAqB;QAEpC;IACF;IA9HA,YAAY,AAAiBV,iBAAoC,CAAE;aAAtCA,oBAAAA;IAAuC;AA+HtE"}