{"version":3,"sources":["../src/app.module.ts"],"sourcesContent":["import { ApolloDriver, ApolloDriverConfig } from '@nestjs/apollo';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport type { Request, Response } from 'express';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CategoriesModule as BuildSyncCategoriesModule } from './build-sync/categories/categories.module';\nimport { PostsModule } from './build-sync/posts/posts.module';\nimport { CategoriesModule } from './categories/categories.module';\nimport { PostStatsModule } from './post-stats/post-stats.module';\nimport { PostsModule as GraphQLPostsModule } from './posts/posts.module';\nimport { PrismaService } from './prisma/prisma.service';\nimport { SupabaseService } from './supabase/supabase.service';\nimport { TagsModule } from './tags/tags.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: ['.env.local', '.env'],\n      isGlobal: true,\n    }),\n    GraphQLModule.forRoot<ApolloDriverConfig>({\n      driver: ApolloDriver,\n      autoSchemaFile: true,\n      playground: true,\n      sortSchema: true,\n      context: ({ req, res }: { req: Request; res: Response }) => ({\n        req,\n        res,\n        session: req.session,\n      }),\n    }),\n    BuildSyncCategoriesModule,\n    CategoriesModule,\n    PostsModule,\n    GraphQLPostsModule,\n    PostStatsModule,\n    TagsModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService, SupabaseService, PrismaService],\n})\nexport class AppModule {}\n"],"names":["AppModule","imports","ConfigModule","forRoot","envFilePath","isGlobal","GraphQLModule","driver","ApolloDriver","autoSchemaFile","playground","sortSchema","context","req","res","session","BuildSyncCategoriesModule","CategoriesModule","PostsModule","GraphQLPostsModule","PostStatsModule","TagsModule","controllers","AppController","providers","AppService","SupabaseService","PrismaService"],"mappings":";;;;+BA2CaA;;;eAAAA;;;wBA3CoC;wBAC1B;wBACM;yBACC;+BAEA;4BACH;kCACmC;6BAClC;mCACK;iCACD;8BACkB;+BACpB;iCACE;4BACL;;;;;;;AA6BpB,IAAA,AAAMA,YAAN,MAAMA;AAAW;;;QA1BtBC,SAAS;YACPC,oBAAY,CAACC,OAAO,CAAC;gBACnBC,aAAa;oBAAC;oBAAc;iBAAO;gBACnCC,UAAU;YACZ;YACAC,sBAAa,CAACH,OAAO,CAAqB;gBACxCI,QAAQC,oBAAY;gBACpBC,gBAAgB;gBAChBC,YAAY;gBACZC,YAAY;gBACZC,SAAS,CAAC,EAAEC,GAAG,EAAEC,GAAG,EAAmC,GAAM,CAAA;wBAC3DD;wBACAC;wBACAC,SAASF,IAAIE,OAAO;oBACtB,CAAA;YACF;YACAC,kCAAyB;YACzBC,mCAAgB;YAChBC,wBAAW;YACXC,yBAAkB;YAClBC,gCAAe;YACfC,sBAAU;SACX;QACDC,aAAa;YAACC,4BAAa;SAAC;QAC5BC,WAAW;YAACC,sBAAU;YAAEC,gCAAe;YAAEC,4BAAa;SAAC"}