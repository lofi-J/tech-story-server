{"version":3,"sources":["../../src/categories/categories.resolver.ts"],"sourcesContent":["import { Args, Int, Query, Resolver } from '@nestjs/graphql';\nimport { CategoriesService } from './categories.service';\nimport { Categories } from './entities/categories.entity';\nimport { CategoriesOrderBy } from './enums/categories-order-by.enum';\n\n@Resolver(() => Categories)\nexport class CategoriesResolver {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Query(() => [Categories])\n  async getAllCategories(\n    @Args('orderBy', {\n      type: () => CategoriesOrderBy,\n      defaultValue: CategoriesOrderBy.CREATED_AT,\n    })\n    orderBy: CategoriesOrderBy,\n  ) {\n    return await this.categoriesService.getAllCategories(orderBy);\n  }\n\n  @Query(() => [Categories], { name: 'popularCategories' })\n  async getPopularCategories(\n    @Args('limit', { type: () => Int, defaultValue: 10 }) limit: number,\n  ) {\n    const popularCategories =\n      await this.categoriesService.getPopularCategories(limit);\n    return popularCategories.map((category) => ({\n      ...category,\n      usage_count: category._count.posts,\n    }));\n  }\n\n  @Query(() => [Categories], { name: 'categoryUsageStats' })\n  async getCategoryUsageStats() {\n    const categoryStats = await this.categoriesService.getCategoryUsageStats();\n    return categoryStats.map((category) => ({\n      id: category.id,\n      category_name: category.category_name,\n      created_at: category.created_at,\n      usage_count: category._count.posts,\n    }));\n  }\n}\n"],"names":["CategoriesResolver","getAllCategories","orderBy","categoriesService","getPopularCategories","limit","popularCategories","map","category","usage_count","_count","posts","getCategoryUsageStats","categoryStats","id","category_name","created_at","Categories","type","CategoriesOrderBy","defaultValue","CREATED_AT","name","Int"],"mappings":";;;;+BAMaA;;;eAAAA;;;yBAN8B;mCACT;kCACP;uCACO;;;;;;;;;;;;;;;AAG3B,IAAA,AAAMA,qBAAN,MAAMA;IAGX,MACMC,iBACJ,AAIAC,OAA0B,EAC1B;QACA,OAAO,MAAM,IAAI,CAACC,iBAAiB,CAACF,gBAAgB,CAACC;IACvD;IAEA,MACME,qBACJ,AAAsDC,KAAa,EACnE;QACA,MAAMC,oBACJ,MAAM,IAAI,CAACH,iBAAiB,CAACC,oBAAoB,CAACC;QACpD,OAAOC,kBAAkBC,GAAG,CAAC,CAACC,WAAc,CAAA;gBAC1C,GAAGA,QAAQ;gBACXC,aAAaD,SAASE,MAAM,CAACC,KAAK;YACpC,CAAA;IACF;IAEA,MACMC,wBAAwB;QAC5B,MAAMC,gBAAgB,MAAM,IAAI,CAACV,iBAAiB,CAACS,qBAAqB;QACxE,OAAOC,cAAcN,GAAG,CAAC,CAACC,WAAc,CAAA;gBACtCM,IAAIN,SAASM,EAAE;gBACfC,eAAeP,SAASO,aAAa;gBACrCC,YAAYR,SAASQ,UAAU;gBAC/BP,aAAaD,SAASE,MAAM,CAACC,KAAK;YACpC,CAAA;IACF;IAlCA,YAAY,AAAiBR,iBAAoC,CAAE;aAAtCA,oBAAAA;IAAuC;AAmCtE;;4BAjCe;YAACc,4BAAU;SAAC;;QAGrBC,MAAM,IAAMC,wCAAiB;QAC7BC,cAAcD,wCAAiB,CAACE,UAAU;;;;;;;;;4BAOjC;YAACJ,4BAAU;SAAC;QAAIK,MAAM;;;QAEhBJ,MAAM,IAAMK,YAAG;QAAEH,cAAc;;;;;;;;;4BAUrC;YAACH,4BAAU;SAAC;QAAIK,MAAM;;;;;;;+BA3BrBL,4BAAU"}