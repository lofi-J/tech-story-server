{"version":3,"sources":["../../src/supabase/supabase.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\n\n@Injectable()\nexport class SupabaseService {\n  private supabase: SupabaseClient;\n\n  constructor(private readonly configService: ConfigService) {\n    const supabaseUrl = this.configService.get<string>('SUPABASE_URL');\n    const supabaseRoleKey = this.configService.get<string>(\n      'SUPABASE_SERVICE_ROLE_KEY',\n    );\n\n    console.log('Supabase URL:', supabaseUrl ? 'Found' : 'Not found');\n    console.log('Supabase Key:', supabaseRoleKey ? 'Found' : 'Not found');\n\n    if (!supabaseUrl || !supabaseRoleKey) {\n      throw new Error('Supabase URL or role key is not set');\n    }\n\n    this.supabase = createClient(supabaseUrl, supabaseRoleKey);\n  }\n\n  getClient(): SupabaseClient {\n    return this.supabase;\n  }\n}\n"],"names":["SupabaseService","getClient","supabase","configService","supabaseUrl","get","supabaseRoleKey","console","log","Error","createClient"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBALc;wBACG;4BACe;;;;;;;;;;AAGtC,IAAA,AAAMA,kBAAN,MAAMA;IAmBXC,YAA4B;QAC1B,OAAO,IAAI,CAACC,QAAQ;IACtB;IAlBA,YAAY,AAAiBC,aAA4B,CAAE;aAA9BA,gBAAAA;QAC3B,MAAMC,cAAc,IAAI,CAACD,aAAa,CAACE,GAAG,CAAS;QACnD,MAAMC,kBAAkB,IAAI,CAACH,aAAa,CAACE,GAAG,CAC5C;QAGFE,QAAQC,GAAG,CAAC,iBAAiBJ,cAAc,UAAU;QACrDG,QAAQC,GAAG,CAAC,iBAAiBF,kBAAkB,UAAU;QAEzD,IAAI,CAACF,eAAe,CAACE,iBAAiB;YACpC,MAAM,IAAIG,MAAM;QAClB;QAEA,IAAI,CAACP,QAAQ,GAAGQ,IAAAA,wBAAY,EAACN,aAAaE;IAC5C;AAKF"}