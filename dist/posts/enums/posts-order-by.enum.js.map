{"version":3,"sources":["../../../src/posts/enums/posts-order-by.enum.ts"],"sourcesContent":["import { registerEnumType } from '@nestjs/graphql';\n\nexport enum PostsOrderBy {\n  LATEST = 'latest', // 최신순 (published 기준)\n  UPDATED = 'updated', // 업데이트순 (updated_at 기준)\n  POPULAR_VIEWS = 'popular_views', // 인기순 (조회수 기준)\n  POPULAR_LIKES = 'popular_likes', // 인기순 (좋아요 기준)\n  TITLE = 'title', // 제목순\n  ID = 'id', // ID순\n}\n\nexport enum SortOrder {\n  ASC = 'asc',\n  DESC = 'desc',\n}\n\nregisterEnumType(PostsOrderBy, {\n  name: 'PostsOrderBy',\n  description: '포스트 정렬 기준',\n  valuesMap: {\n    LATEST: {\n      description: '최신순 (발행일 기준) - published 필드로 정렬',\n    },\n    UPDATED: {\n      description: '업데이트순 (수정일 기준) - updated_at 필드로 정렬',\n    },\n    POPULAR_VIEWS: {\n      description:\n        '인기순 (조회수 기준) - post_stats.views로 정렬, stats가 없으면 0으로 처리',\n    },\n    POPULAR_LIKES: {\n      description:\n        '인기순 (좋아요 기준) - post_stats.likes로 정렬, stats가 없으면 0으로 처리',\n    },\n    TITLE: {\n      description: '제목순 - title 필드로 정렬',\n    },\n    ID: {\n      description: 'ID순 - id 필드로 정렬',\n    },\n  },\n});\n\nregisterEnumType(SortOrder, {\n  name: 'SortOrder',\n  description: '정렬 순서',\n  valuesMap: {\n    ASC: {\n      description: '오름차순',\n    },\n    DESC: {\n      description: '내림차순',\n    },\n  },\n});\n"],"names":["PostsOrderBy","SortOrder","registerEnumType","name","description","valuesMap","LATEST","UPDATED","POPULAR_VIEWS","POPULAR_LIKES","TITLE","ID","ASC","DESC"],"mappings":";;;;;;;;;;;QAEYA;eAAAA;;QASAC;eAAAA;;;yBAXqB;AAE1B,IAAA,AAAKD,sCAAAA;;;;;;;WAAAA;;AASL,IAAA,AAAKC,mCAAAA;;;WAAAA;;AAKZC,IAAAA,yBAAgB,EAACF,cAAc;IAC7BG,MAAM;IACNC,aAAa;IACbC,WAAW;QACTC,QAAQ;YACNF,aAAa;QACf;QACAG,SAAS;YACPH,aAAa;QACf;QACAI,eAAe;YACbJ,aACE;QACJ;QACAK,eAAe;YACbL,aACE;QACJ;QACAM,OAAO;YACLN,aAAa;QACf;QACAO,IAAI;YACFP,aAAa;QACf;IACF;AACF;AAEAF,IAAAA,yBAAgB,EAACD,WAAW;IAC1BE,MAAM;IACNC,aAAa;IACbC,WAAW;QACTO,KAAK;YACHR,aAAa;QACf;QACAS,MAAM;YACJT,aAAa;QACf;IACF;AACF"}