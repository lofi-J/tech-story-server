{"version":3,"sources":["../../src/util/post.utils.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Injectable()\nexport class PostUtils {\n  constructor(private readonly prisma: PrismaService) {}\n\n  /**\n   * slug를 통해 post의 id를 조회.\n   * @param slug - 포스트의 slug\n   * @returns post id 또는 null (포스트가 존재하지 않는 경우)\n   */\n  async getPostIdBySlug(slug: string): Promise<number | null> {\n    try {\n      const post = await this.prisma.posts.findUnique({\n        where: { slug },\n        select: { id: true },\n      });\n\n      return post?.id || null;\n    } catch (error) {\n      console.error('Error finding post by slug:', error);\n      return null;\n    }\n  }\n\n  /**\n   * slug를 통해 post가 존재하는지 확인.\n   * @param slug - 포스트의 slug\n   * @returns 포스트 존재 여부\n   */\n  async isPostExists(slug: string): Promise<boolean> {\n    const postId = await this.getPostIdBySlug(slug);\n    return postId !== null;\n  }\n}\n"],"names":["PostUtils","getPostIdBySlug","slug","post","prisma","posts","findUnique","where","select","id","error","console","isPostExists","postId"],"mappings":";;;;+BAIaA;;;eAAAA;;;wBAJc;+BACG;;;;;;;;;;AAGvB,IAAA,AAAMA,YAAN,MAAMA;IAGX;;;;GAIC,GACD,MAAMC,gBAAgBC,IAAY,EAA0B;QAC1D,IAAI;YACF,MAAMC,OAAO,MAAM,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,UAAU,CAAC;gBAC9CC,OAAO;oBAAEL;gBAAK;gBACdM,QAAQ;oBAAEC,IAAI;gBAAK;YACrB;YAEA,OAAON,MAAMM,MAAM;QACrB,EAAE,OAAOC,OAAO;YACdC,QAAQD,KAAK,CAAC,+BAA+BA;YAC7C,OAAO;QACT;IACF;IAEA;;;;GAIC,GACD,MAAME,aAAaV,IAAY,EAAoB;QACjD,MAAMW,SAAS,MAAM,IAAI,CAACZ,eAAe,CAACC;QAC1C,OAAOW,WAAW;IACpB;IA7BA,YAAY,AAAiBT,MAAqB,CAAE;aAAvBA,SAAAA;IAAwB;AA8BvD"}